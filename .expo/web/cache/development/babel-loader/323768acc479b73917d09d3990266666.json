{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gjohnston\\\\Documents\\\\Udemy\\\\grider-rn\\\\react-native-udemy-grider\\\\src\\\\screens\\\\ColorScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  var randomRGB = function randomRGB() {\n    var red = Math.floor(Math.random() * 256);\n    var green = Math.floor(Math.random() * 256);\n    var blue = Math.floor(Math.random() * 256);\n    return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add a Color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRGB()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["C:/Users/gjohnston/Documents/Udemy/grider-rn/react-native-udemy-grider/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","randomRGB","red","Math","floor","random","green","blue","item","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACID,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACjBE,MADiB;AAAA,MACTC,SADS;;AAIxB,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,QAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,oBAAcH,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AACD,GALD;;AAOA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AACQ,IAAA,OAAO,EAAE,mBAAM;AACbP,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;AACD,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE,sBAACO,IAAD;AAAA,aAAUA,IAAV;AAAA,KADhB;AAEE,IAAA,IAAI,EAAET,MAFR;AAGE,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXS,IAAW,QAAXA,IAAW;AACxB,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEH;AAA5C,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAmBD,CA9BD;;AAgCA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAehB,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Button, FlatList } from 'react-native';\r\n\r\nconst ColorScreen = () => {\r\n  const [colors, setColors] = useState([]);\r\n  // console.log(colors);\r\n\r\n  const randomRGB = () => {\r\n    const red = Math.floor(Math.random() * 256);\r\n    const green = Math.floor(Math.random() * 256);\r\n    const blue = Math.floor(Math.random() * 256);\r\n    return `rgb(${red}, ${green}, ${blue})`;\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Button title='Add a Color'\r\n              onPress={() => {\r\n                setColors([...colors, randomRGB()]);\r\n              }}/>\r\n      <FlatList\r\n        keyExtractor={(item) => item}\r\n        data={colors}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <View\r\n              style={{ height: 100, width: 100, backgroundColor: item }}>\r\n            </View>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default ColorScreen;"]},"metadata":{},"sourceType":"module"}